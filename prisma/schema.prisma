// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BloodGroup {
  id        String   @id @default(uuid())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Division {
  id        String     @id @default(uuid())
  name      String     @unique
  districts District[]
  users     User[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model District {
  id         String   @id @default(uuid())
  name       String   @unique
  division   Division @relation(fields: [divisionId], references: [id])
  divisionId String
  users      User[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Thana      Thana[]
}

model Thana {
  id         String   @id @default(uuid())
  name       String   @unique
  district   District @relation(fields: [districtId], references: [id])
  districtId String
  users      User[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model User {
  id           String     @id @default(uuid())
  mobile       String     @unique
  password     String
  firstName    String
  lastName     String
  dateOfBirth  String
  division     Division   @relation(fields: [divisionId], references: [id])
  divisionId   String
  district     District   @relation(fields: [districtId], references: [id])
  districtId   String
  thana        Thana      @relation(fields: [thanaId], references: [id])
  thanaId      String
  bloodGroup   BloodGroup @relation(fields: [bloodGroupId], references: [id])
  bloodGroupId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
